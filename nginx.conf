worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include mime.types;

  keepalive_timeout 65;
  server {
    listen 80;


    # Redirect to medium.com 
    location / {
       rewrite ^ https://www.medium.com/ permanent;
    }

    # Redirect to medium.com with another status code
    location /redir2 {
      return 302 https://medium.com;
    }

    # Proxy to whatever you like site from URL/proxy path
    location /proxy {
      proxy_pass https://ukrainian-recipes.com/ukrainian-borsch.html;
    }

    # Display 4xx from URL/forbidden
    location /forbidden {
      return 403;
    }

    # Do the basic auth for URL/login
    location /login {
      auth_basic "Restricted Content";
      auth_basic_user_file /etc/nginx/.htpasswd;
      try_files /dev/null @succesLog;
    }
    location @succesLog {
      return 200 'Success!';
    }


    # Do load balancing (upstream) with Nginx web server (start two additional servers to balancing)
    location /loadbalancing {
      proxy_pass http://backend;
    }
  }
  upstream backend {
      server localhost:8001;
      server localhost:8002;
    }
    server{
      listen 8001;
      return 200 'Hi there from 8001 port!';
    }
    server{
      listen 8002;
      return 200 'Hello there from 8002 port!';
    }
}